library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity g01_mac is
	port(x: in std_logic_vector(9 downto 0); 
		  y: in std_logic_vector(9 downto 0);
		  N: in std_logic_vector(9 downto 0);
		  clk: in std_logic;
		  rst: in std_logic;
		  mac: out std_logic_vector(20 downto 0);
		  ready: out std_logic);
end g01_mac;
		
architecture Arch of g01_mac is
signal A:  std_logic_vector(20 downto 0); 
begin
	process(clk,rst) --using
	begin
       ready <= '1';
		if (rst = '1') then
			A <= (others => '0');
		elsif(rising_edge(clk)) then 
		   A <= std_logic_vector(unsigned(A) + unsigned(unsigned(x)*unsigned(y))); -- Storing A+x*y in A 
		end if;
   end process;
   mac <= A; -- assigning A to mac 
end Arch;
